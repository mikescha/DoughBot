PythonAnywhere deployment
-- Get the latest code live
---- Update version number to something higher than last deployment, so that the cookies get wiped
---- Push everything to the cloud

-- In a Bash shell in PA, do a Git pull (do a reset if necessary to remove prior local changes)
---- git reset --hard
---- git pull

-- In Settings,
---- Change STATICROOT = "/home/schack/DoughBot/home/schack/DoughBot/static" (or figure out how to calculate this directly)

-- From the directory where the manage.py file lives, do:  
----workon schack.pythonanywhere.com
----python3.7 manage.py collectstatic

-- Go to the web tab: https://www.pythonanywhere.com/user/schack/webapps/#tab_id_schack_pythonanywhere_com  and then reload the app

Helpful links:
https://help.pythonanywhere.com/pages/DjangoStaticFiles
https://help.pythonanywhere.com/pages/DebuggingStaticFiles/
https://help.pythonanywhere.com/pages/Virtualenvs/
-- To be installed:
---- pip install django=3.1.1
---- pip install django-widget-tweaks

To do: 
p1
-- Add volume approximations for Imperial numbers
    ** Because of rounding, some numbers look weird. e.g. 
        5 10" Neapolitan pizzas: 12 oz (1 1/2 cup + 2 1/3 tsp) Luke-warm water  //If it's 12 oz, should be EXACTLY 1.5 cup)
        5 16" Deep dish: 52 oz (6 1/2 cups + 1/2 tsp) Luke-warm water // 1/2tsp is unnecessary after 6.5 cups
        10 16" Deep dish: 16 oz (2 1/2 cups + 2 tbsp)	Semolina flour  //16 oz should be 1lb
        8 25cm Neapolitan: 588.9 ml	Luke-warm water  //should round

-- Change the recipes and instructions to exactly match the originals, then change the name to provide credit
-- Confirm then that the scaling works for the recipes, so when you make as much as in the original recipe the amounts are correct
-- Add recipes, e.g. for sicilian pizza and maybe sheet pan pizza

-- Bugs:
    ** Column widths look bad in metric because it's giving too much space to the ingredients
    ** Can non-breaking spaces be put in instead of regular spaces in places where linebreaks shouldn't happen (e.g. don't want:
        145
        g
       )

-- Add buttons to let the user increase/decrease the numeric amounts instead of doing text input?
   OR, change the integer input fields into choices?

-- Add ability to buy stuff from Amazon

-- Add tip jar

p2
-- Allow the user to choose the amount of pizza by calories per ball

Code cleanup:
-- Move more standard functions into the header.js so they don't need to be rewritten for bread





Taken out of views.py:
    # If we want to read from the form itself, do like this: style = form.cleaned_data["pizza_style"]


Taken out of header.js
    // This is only for allowing somebody to click the unit in the form to change it from there.
    /*
    $('[data-metric]').on("click", function (event) {
        console.log('Current measurement is ' + currentUnit);

        if (currentUnit === 'standard') {
            var selectedUnit = 'metric'';
            $('.unitSwitch a').removeClass('unitSwitch-active');
            $('.unitSwitch a[data-unit-type="' + selectedUnit + '"]').addClass('unitSwitch-active');
            currentUnit = selectedUnit;
        }
        else if (currentUnit === 'metric') {
            var selectedUnit = 'standard';
            $('.unitSwitch a').removeClass('unitSwitch-active');
            $('.unitSwitch a[data-unit-type="' + selectedUnit + '"]').addClass('unitSwitch-active');
            currentUnit = selectedUnit;
        }
        $('[data-metric]').each(function () {
            var $this = $(this);

            // if the default data unit value is undefined, save the original text as the value
            if ($this.data('standard') === undefined) {
                $this.data('standard', $this.text());
            }
            // If the shown text doesn't match the selected unit data value, change it.
            if ($this.text !== $this.data(selectedUnit)) {
                $this.text($this.data(selectedUnit));
            }
        });
    });
    */








Taken out of pizza.html:
  <p class="input-group-text text-muted"><small>Measurements are in <strong data-standard="US/Imperial units" data-metric="Metric units">US/Imperial units</strong> <span data-standard="(lbs, oz, in)" data-metric="(kg, ml, cm)">(lbs, oz, ft)</span></small></p>



Taken out of layout.html:
<head>
	<script src="{% static 'app/scripts/modernizr-2.6.2.js' %}"></script>
	<link rel="stylesheet" type="text/css" href="{% static 'app/content/bootstrap.min.css' %}" />
	<link rel="stylesheet" type="text/css" href="{% static 'app/content/site.css' %}" />

<body>
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li><a href="{% url 'home' %}">Home</a></li>
                    <li><a href="{% url 'about' %}">About</a></li>
                    <li><a href="{% url 'contact' %}">Contact</a></li>
                </ul>
                {% include 'app/loginpartial.html' %}
            </div>

<script>
	<script src="{% static 'app/scripts/jquery-1.10.2.js' %}"></script>
    <script src="{% static 'app/scripts/bootstrap.js' %}"></script>
    <script src="{% static 'app/scripts/respond.js' %}"></script>


FROM INDEX.HTML

<div class="jumbotron">
    <h1>PizzaBot</h1>
    <p class="lead">PizzaBot helps you get the perfect dough for your pizza, every time!</p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            Django gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="https://djangobook.com/django-tutorials/">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>The Python Package Index is a repository of software for the Python programming language.</p>
        <p><a class="btn btn-default" href="https://pypi.org/">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Microsoft Azure</h2>
        <p>You can easily publish to Microsoft Azure using Visual Studio. Find out how you can host your application using a free trial today.</p>
        <p><a class="btn btn-default" href="http://azure.microsoft.com">Learn more &raquo;</a></p>
    </div>
</div>
